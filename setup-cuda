distro=$((lsb_release -ds 2>/dev/null || cat /etc/*release 2>/dev/null | head -n1 || uname -om) | awk '{ print $1 }')

sudo echo test || exit
sudo apt-get install pciutils -y

if [[ "$distro" == "Ubuntu" ]]; then
    # cutting edge version for ubuntu
    nv_ver=410
    cuda_url=https://developer.nvidia.com/compute/cuda/10.0/Prod/local_installers/cuda_10.0.130_410.48_linux
    cudnn_url=http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/libcudnn7_7.4.2.24-1+cuda10.0_amd64.deb
    sudo add-apt-repository ppa:graphics-drivers -y
    sudo apt-get update
    sudo apt-get install nvidia-driver-${nv_ver} nvidia-utils-${nv_ver} nvidia-settings -y
fi

if [[ "$distro" == "Debian" ]]; then
    # TODO: this doesn't work yet. make it work!
    cuda_url=https://developer.nvidia.com/compute/cuda/10.0/Prod/local_installers/cuda_10.0.130_410.48_linux
    cudnn_url=http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/libcudnn7_7.4.2.24-1+cuda10.0_amd64.deb
    echo "deb http://httpredir.debian.org/debian stretch-backports main contrib non-free" | sudo tee -a /etc/apt/sources.list
    sudo sed -i.bak 's/stretch[^ ]* main$/& contrib non-free/g' /etc/apt/sources.list

    sudo apt-get update
    sudo apt-get install linux-headers-$(uname -r|sed 's/[^-]*-[^-]*-//') -y
    sudo apt-get install -t stretch-backports nvidia-driver nvidia-smi -y
fi

wget -N ${cuda_url} -O cuda.run
chmod +x cuda.run
sudo ./cuda.run --override --silent --toolkit --no-opengl-libs
rm cuda.run

wget -N ${cudnn_url} -O libcudnn.deb
sudo dpkg -i libcudnn.deb
rm libcudnn.deb

sudo apt-get install libcupti-dev -y


lspci | grep VGA | grep -qi Intel && 
sudo tee /usr/share/X11/xorg.conf.d/10-intel.conf<<EOL
Section "Device"
        Identifier "Intel GPU"
        Driver "modesetting"
        BusID  "PCI:0:2:0"
EndSection
EOL

sudo mkdir -p /usr/share/X11/xorg.conf.disabled/
sudo mv /usr/share/X11/xorg.conf.d/10-nvidia.conf /usr/share/X11/xorg.conf.disabled/

# fix: https://devtalk.nvidia.com/default/topic/1045975/cuda-setup-and-installation/-error-while-loading-shared-libraries-libcublas-so-10-0-cannot-open-shared-object-file-no-such-file-or-directory/
echo 'export LD_LIBRARY_PATH=/usr/local/cuda-10.0/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}' >> ~/.bashrc


echo "restart to complete CUDA installation"
