distro=$((lsb_release -ds 2>/dev/null || cat /etc/*release 2>/dev/null | head -n1 || uname -om) | awk '{ print $1 }')

sudo echo test || exit
sudo apt-get install pciutils -y

if [[ "$distro" == "Ubuntu" ]]; then
    # cutting edge version for ubuntu
    nv_ver=418
    cuda_url=https://developer.nvidia.com/compute/cuda/10.1/Prod/local_installers/cuda_10.1.105_418.39_linux.run
    cudnn_url=http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/libcudnn7_7.5.0.56-1+cuda10.1_amd64.deb
    sudo add-apt-repository ppa:graphics-drivers -y
    sudo apt-get update
    sudo apt-get install nvidia-driver-${nv_ver} nvidia-utils-${nv_ver} nvidia-settings -y
fi

if [[ "$distro" == "Debian" ]]; then
    cuda_url=https://developer.nvidia.com/compute/cuda/10.1/Prod/local_installers/cuda_10.1.105_418.39_linux.run
    cudnn_url=http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/libcudnn7_7.5.0.56-1+cuda10.1_amd64.deb
    echo "deb http://httpredir.debian.org/debian stretch-backports main contrib non-free" | sudo tee -a /etc/apt/sources.list
    sudo sed -i.bak 's/stretch[^ ]* main$/& contrib non-free/g' /etc/apt/sources.list

    sudo apt-get update
    sudo apt-get install linux-headers-$(uname -r|sed 's/[^-]*-[^-]*-//') -y
    sudo apt-get install -t stretch-backports nvidia-driver nvidia-smi -y
fi


wget -N ${cuda_url} -O cuda.run
wget -N ${cudnn_url} -O libcudnn.deb
chmod +x cuda.run
sudo ./cuda.run --override --silent --toolkit --no-opengl-libs
sudo dpkg -i libcudnn.deb
sudo apt-get install libcupti-dev -y


lspci | grep VGA | grep -qi Intel && 
sudo tee /usr/share/X11/xorg.conf.d/10-intel.conf<<EOL
Section "Device"
        Identifier "Intel GPU"
        Driver "modesetting"
        BusID  "PCI:0:2:0"
EndSection
EOL

sudo mkdir -p /usr/share/X11/xorg.conf.disabled/
sudo mv /usr/share/X11/xorg.conf.d/10-nvidia.conf /usr/share/X11/xorg.conf.disabled/

echo "restart to complete CUDA installation"
